[project]
name = "quant"
description = "量化交易系统"
requires-python = ">=3.11,<3.13"
version = "0.1.0"
dependencies = [
    # Web框架
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "websockets>=12.0",
    "httpx>=0.26.0",
    "aiohttp>=3.9.0",
    
    # 核心数据处理
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scipy>=1.12.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.18.0",
    "dash>=2.14.0",
    "streamlit>=1.29.0",
    
    # 数据获取
    "yfinance>=0.2.36",
    "akshare>=1.13.0",
    "tushare>=1.4.0",
    "ccxt>=4.2.0",
    "alpha-vantage>=2.3.1",
    "pandas-datareader>=0.10.0",
    "finnhub-python>=2.4.0",
    "fredapi>=0.5.0",
    
    # 回测框架
    "backtrader>=1.9.78",
    "zipline-reloaded>=3.0.0",
    "bt>=0.2.10",
    "vectorbt>=0.26.0",
    "pyfolio-reloaded>=0.9.5",
    "alphalens-reloaded>=0.4.3",
    "empyrical-reloaded>=0.5.10",
    "quantstats>=0.0.62",
    
    # 技术分析
    "ta>=0.11.0",
    "pandas-ta>=0.3.14b0",
    "finta>=1.3",
    "stockstats>=0.6.2",
    
    # 投资组合优化
    "PyPortfolioOpt>=1.5.5",
    "cvxpy>=1.4.0",
    "riskfolio-lib>=6.0.0",
    
    # 数据库
    "tortoise-orm[asyncpg]>=0.20.0",
    "asyncpg>=0.29.0",
    "aerich>=0.7.2",
    "redis>=5.0.0",
    "motor>=3.3.0",
    # "arctic>=1.79.0",  # 暂时移除，与 Python 3.12 有兼容性问题
    "influxdb-client>=1.39.0",
    
    # 机器学习
    "scikit-learn>=1.4.0",
    "statsmodels>=0.14.0",
    "arch>=6.3.0",
    "prophet>=1.1.5",
    "darts>=0.27.0",
    "tsfresh>=0.20.2",
    
    # 配置和工具
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.2",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "dependency-injector>=4.41.0",
    "joblib>=1.3.2",
    "numba>=0.59.0",
    
    # 其他
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.9",
    "pytz>=2024.1",
    "pandas-market-calendars>=4.3.0",
]

[project.optional-dependencies]
dev = [
    # 测试
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    
    # 代码质量
    "black>=24.1.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "bandit[toml]>=1.7.0",
    "pre-commit>=3.6.0",
    
    # 类型检查
    "types-requests>=2.31.0",
    "types-setuptools>=69.0.0",
    "pandas-stubs>=2.1.0",
]

ml = [
    # 深度学习
    "tensorflow>=2.15.0",
    "torch>=2.2.0",
    "keras>=3.0.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.3.0",
    "catboost>=1.2.0",
    
    # 高级时间序列
    "sktime>=0.26.0",
    "tslearn>=0.6.0",
    "pykalman>=0.9.5",
    "filterpy>=1.4.5",
    "hmmlearn>=0.3.0",
    
    # 金融机器学习
    "mlfinlab>=1.5.0",
]

trading = [
    # 交易API
    "ib-insync>=0.9.86",
    "alpaca-trade-api>=3.1.1",
    "python-binance>=1.0.19",
    "tda-api>=1.6.0",
    "robin-stocks>=3.0.0",
    "degiro-connector>=2.0.0",
    
    # 加密货币交易
    "freqtrade>=2024.1",
    "jesse>=0.26.0",
    "hummingbot>=2.0.0",
]

advanced = [
    # 高级回测
    "qstrader>=0.2.0",
    "finlab>=0.2.0",
    "blankly-finance>=1.18.0",
    "nautilus-trader>=1.192.0",
    
    # 金融工程
    "QuantLib-Python>=1.33",
    "gs-quant>=1.7.0",
    "pyfin>=0.7.0",
    
    # 高级数据源
    "iexfinance>=0.5.0",
    "polygon-api-client>=1.13.0",
    "tiingo>=0.14.0",
    "quandl>=3.7.0",
    
    # 风险管理
    "pyfolio>=0.9.2",
    "riskparityportfolio>=0.5",
    
    # 其他高级工具
    "pyfinance>=1.3.0",
    "ffn>=0.3.6",
    "pyti>=0.2.2",
    "tulipy>=0.4.0",
    "bta-lib>=0.1.1",
]

viz = [
    # 高级可视化
    "bokeh>=3.3.0",
    "holoviews>=1.18.0",
    "altair>=5.2.0",
    "gradio>=4.10.0",
    
    # 交互式工具
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "notebook>=7.0.0",
    "ipywidgets>=8.1.0",
]

all = [
    "quant[ml]",
    "quant[trading]",
    "quant[advanced]",
    "quant[viz]",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # 排除的目录
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
# 代码行长度
line-length = 88
# Python 版本
target-version = "py312"
# 启用preview模式以使用更多规则
preview = true
# 每个文件的修复
fix = true

# 排除的文件
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.lint]
# 启用的规则 - 最严格配置
select = [
    "ALL",  # 启用所有规则
]

# 忽略的规则系列
ignore = [
    # 版权声明系列 - 不需要版权声明
    "CPY",

    # 文档字符串系列 - 不强制要求文档字符串
    "D",

    # TODO标签系列 - 不强制TODO格式规范
    "TD",

    # 修复标记系列 - 允许FIXME等标记
    "FIX",

    # 安全检查系列 - 关闭安全检查
    "S",

    # 变量名冲突 - 允许ORM模型中使用id、type等
    "A003",

    # 日志格式 - 允许在日志中使用f-string
    "G004",

    # 异常处理 - 允许使用通用Exception和logger.error
    "BLE001", # Do not catch blind exception: Exception
    "TRY002", # Create your own exception
    "TRY300", # Consider moving this statement to an `else` block
    "TRY301", # Abstract raise to an inner function
    "TRY400", # Use logging.exception instead of logging.error
    "EM101",  # Exception must not use a string literal - 允许异常直接使用字符串字面量
    "EM102",  # Exception must not use an f-string literal - 允许异常使用f-string

    # 代码复杂度 - 忽略复杂度过高的警告
    "C901",   # Function is too complex

    # 私有成员访问 - 允许访问私有成员（类内部使用）
    "SLF001", # Private member accessed

    # 类型注解
    "ANN003", # Missing type annotation for **kwargs
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "ANN201", # Missing return type annotation for public function
    "ANN202", # Missing return type annotation for private function

    # 参数相关
    "ARG002", # Unused method argument

    # 格式化相关（由工具处理）
    "COM812", # Trailing comma missing (handled by formatter)
    "ISC001", # Single line implicit string concatenation (handled by formatter)
    "Q000",   # Single quotes found but double quotes preferred
    "Q001",   # Single quote docstring found but double quotes preferred
    "Q002",   # Docstring should use triple double quotes
    "Q003",   # Change outer quotes to avoid escaping inner quotes
    "E501",   # Line too long (handled by black)
    "W505",   # Doc line too long (handled by black)

    # 其他宽松配置
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0914", # Too many local variables in function body
    "PLR0915", # Too many statements in function body
    "PLR0917", # Too many positional arguments
    "PLR1702", # Too many nested blocks
    "PLR2004", # Magic value used in comparison
    "PLR6301", # Method could be a function, class method, or static method
    "FBT001",  # Boolean-typed positional argument in function definition
    "FBT002",  # Boolean default positional argument in function definition
    "T201",   # print found
    "T203",   # pprint found
    "DOC201",  # Missing return documentation
    "DOC402",  # Missing yield documentation
    "DOC501",  # Missing raises documentation
    "TRY003"
]

[tool.ruff.lint.per-file-ignores]
# 迁移文件的特殊规则
"*/migrations/*" = [
    "ARG001",  # Unused function argument (迁移文件的参数由框架定义)
    "RUF029",  # Async function without await (迁移文件的签名由框架定义)
]

[tool.ruff.lint.mccabe]
# 最严格的复杂度限制
max-complexity = 5

[tool.ruff.lint.isort]
# import 排序配置
known-first-party = ["app"]
force-single-line = true
force-sort-within-sections = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 5
max-branches = 12
max-returns = 6
max-statements = 50

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-dummy-args = true
suppress-none-returning = true

# MyPy 静态类型检查配置
[tool.mypy]
python_version = "3.12"
# 最严格的类型检查
strict = true
# 额外的严格选项
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
# 禁止隐式可选
no_implicit_optional = true
# 严格相等检查
strict_equality = true
# 类型检查所有函数
check_untyped_defs = true
# 不允许未类型化的调用
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# 不允许 Any 类型
disallow_any_generics = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_subclassing_any = true
# 其他严格选项
implicit_reexport = false
strict_optional = true
# 错误时显示更多信息
pretty = true
error_summary = true

[[tool.mypy.overrides]]
module = [
    "tortoise.*",
    "aerich.*",
    "fastapi.*",
    "uvicorn.*",
    "pydantic.*",
]
ignore_missing_imports = true

# Bandit 安全检查配置
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # 允许 assert_used (在测试中有用)

# Coverage 配置
[tool.coverage.run]
source = ["app"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
fail_under = 90

# Pytest 配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=90",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["app"]

[tool.aerich]
tortoise_orm = "app.database.config.TORTOISE_ORM"
location = "./app/database/migrations"
src_folder = "./."
